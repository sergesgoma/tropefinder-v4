generator client {
  provider = "prisma-client-js"
   previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
    url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Book {
  id                Int      @id @default(autoincrement())
  book_id           Int      @unique
  title             String?
  author            String?
  img               String?
  gdRating          Decimal? @db.Decimal(3, 2)
  series            String?
  seriesName        String?
  numSeries         String?
  numGdRating       Int?
  numGdReview       String?
  format            String?
  firstPublished    String?
  yearOfPublication String?
  language          String?
  awards            String[]
  tag               String[]
  genres            String[]
  summary           String?

  Reviews  Reviews[]
  Wishlist Wishlist[]
}

model User {
  user_id  Int        @id @default(autoincrement())
  username String     @unique
  email    String     @unique
  password String
  isAdmin  Boolean    @default(false)
  Reviews  Reviews[]
  Wishlist Wishlist[]
}

model Reviews {
  review_id Int     @id @default(autoincrement())
  user_id   Int
  username  String?
  user      User    @relation(fields: [user_id], references: [user_id])
  review    String?
  book_id   Int
  book      Book    @relation(fields: [book_id], references: [book_id])
  stars     Int?
  updated   Boolean @default(false)
}

model Wishlist {
  wishlist_id Int  @id @default(autoincrement())
  book_id     Int
  book        Book @relation(fields: [book_id], references: [book_id])
  user_id     Int
  user        User @relation(fields: [user_id], references: [user_id])
}

model Tropes {
  trope_id Int  @id @default(autoincrement())
  trope String?
}